<?php
/**
 * Created by PhpStorm.
 * User: r.malk
 * Date: 05/07/2018
 * Time: 15:43
 */

namespace BusinessMag\MagBundle\Controller;


use BusinessMag\MagBundle\Entity\Article;
use BusinessMag\MagBundle\Entity\Commentaire;
use BusinessMag\MagBundle\Form\ArticleType;
use BusinessMag\MagBundle\Form\RechercheType;
use BusinessMag\MagBundle\Form\CommentaireType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use FOS\UserBundle\Model\UserInterface;
use Symfony\Component\Security\Core\Exception\AccessDeniedException;

class ArticleController extends Controller

{
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function addAction(Request $request)
    {

        $user = $this->getUser();
        if (!is_object($user) || !$user instanceof UserInterface) {
            throw new AccessDeniedException('This user does not have access to this section.');
        }

        $article= new Article();
        $article->setCreatedAt(new \DateTime('now'));
        $em = $this->getDoctrine()->getManager();
        $form = $this->createForm(new ArticleType(),$article);
        $repository=$this->getDoctrine()->getRepository('MagBundle:Rubrique');
        $rubrique = $repository->findAll();
        $repository=$this->getDoctrine()->getRepository('MagBundle:Theme');
        $theme = $repository->findAll();
        $form->handleRequest($request);
        $formView = $form->createView();

        if($form->isSubmitted() && $form->isValid()){
            $Image = $this->getRequest()->get('fname');

            $em->persist($article);
            $em->flush();

            if ($Image==3){
                return $this->redirect($this->generateUrl('contenu_list'));
            }
            else{

                return $this->redirect($this->generateUrl('contenu_add'));
            }
        }


        return $this->render('MagBundle:Default:ArticleAdd.html.twig',array('form'=>$formView,'rubrique'=>$rubrique,'theme'=>$theme, 'user' => $user));


    }

    public function AddFormAction(Request $request, $id)
    {
        $user = $this->getUser();
        if (!is_object($user) || !$user instanceof UserInterface) {
            throw new AccessDeniedException('This user does not have access to this section.');
        }

        $article= new Article();
        $article->setCreatedAt(new \DateTime('now'));
        $em = $this->getDoctrine()->getManager();
        $form = $this->createForm(new ArticleType(),$article);
        $repository=$this->getDoctrine()->getRepository('MagBundle:Rubrique');
        $rubrique = $repository->findAll();
        $repository=$this->getDoctrine()->getRepository('MagBundle:Theme');
        $theme = $repository->findAll();
        $form->handleRequest($request);
        $formView = $form->createView();

        if($form->isSubmitted() && $form->isValid()){

            $em->persist($article);
            $em->flush();

            return $this->redirect($this->generateUrl('contenu_Add'));

        }


        return $this->render('MagBundle:Default:ArticleAdd.html.twig',array('form'=>$formView,'rubrique'=>$rubrique,'theme'=>$theme, 'user' => $user));


    }


//    public function AddAction(Request $request){
//
//        $repository = $this->getDoctrine()->getRepository('MagBundle:Rubrique');
//        $rubriques = $repository->findAll();
//        $repository = $this->getDoctrine()->getRepository('MagBundle:Theme');
//        $themes = $repository->findAll();
//        if($request->isMethod('post')) {
//            $Image = $request->files->get('file');
//            $picName = $this->generateUniqueFileName().'-'.$Image->getClientOriginalName();
//            $dir = __DIR__.'/../../../../web/upload';
//
//            $Image2 = $request->files->get('file2');
//            $picName2 = $this->generateUniqueFileName().'-'.$Image2->getClientOriginalName();
//            $dir2 = __DIR__.'/../../../../web/upload';
//
//            $Image3 = $request->files->get('file3');
//            $picName3 = $this->generateUniqueFileName().'-'.$Image3->getClientOriginalName();
//            $dir3 = __DIR__.'/../../../../web/upload';
//
//
//            $article = new Article();
//            $em        = $this->getDoctrine()->getManager();
//            $theme     = $request->request->get('theme');
//            $entities  = $em->getRepository('MagBundle:Theme')->find($theme);
//            $file      =   $request->request->get('file');
//            $titreInt  =   $request->request->get('titreIntro');
//            $texteInt  =   $request->request->get('texteIntro');
//            $file2     =   $request->request->get('file2');
//            $titreArt  =   $request->request->get('titreArticle');
//            $texteA    =   $request->request->get('texteArticle');
//            $rubrique  = $request->request->get('rubrique');
//            $entit     = $em->getRepository('MagBundle:Rubrique')->/*find($rubrique)*/findById($rubrique);
//            $pub       =   $request->request->get('published');
//            $datePubA  =   $request->request->get('datePub');
//            $dateFinA  =   $request->request->get('dateFin');
//            $file3     =   $request->request->get('file3');
//            $titreVArt     =   $request->request->get('titreVArticle');
//            $pubV     =   $request->request->get('publishedV');
//            $datePubV     =   $request->request->get('dateVPub');
//            $dateFinV     =   $request->request->get('dateVFin');
//
//            var_dump($rubrique);
//            die('');
//
//            $Image->move($dir, $picName);
//            $Image2->move($dir2, $picName2);
//            $Image3->move($dir3, $picName3);
//
////  $entity= $em->getRepository('MagBundle:Habillage')->find($id);
//
//            $article->setTheme($entities);
//            $article->setPath($picName);
//            $article->setTitreIntro($titreInt);
//            $article->setTexteIntro($texteInt);
//            $article->setPatha($picName2);
//            $article->setTitreArticle($titreArt);
//            $article->setTexteArticle($texteA);
//            $article->setRubrique($entit);
//            $article->setPublished($pub);
//            $article->setCreatedAt(new \DateTime());
//            $article->setDatePub(new \DateTime($datePubA));
//            $article->setDateFin(new \DateTime($dateFinA));
//            $article->setPathb($picName3);
//            $article->setTitre($titreVArt);
//            $article->setVpublished($pubV);
//            $article->setDatePubVed(new \DateTime($datePubV));
//            $article->setDateFinVed(new \DateTime($dateFinV));
//
//
//
//            $em->persist($article);
//            $em->flush();
//
//            return $this->redirect($this->generateUrl('contenu_list'));
//
//        }
//
//        return $this->render('MagBundle:Default:ArticleAdd.html.twig',array('themes'=>$themes,'rubriques'=>$rubriques));
//    }


    public function listAction(){

        $user = $this->getUser();
        if (!is_object($user) || !$user instanceof UserInterface) {
            throw new AccessDeniedException('This user does not have access to this section.');
        }

        $repository=$this->getDoctrine()->getRepository('MagBundle:Article');

        $article = $repository->findAll();
        $repository=$this->getDoctrine()->getRepository('MagBundle:Rubrique');

        $rubrique = $repository->findAll();

        return $this->render('MagBundle:Default:ArticlesList.html.twig',array('article'=>$article, 'rubrique'=>$rubrique, 'user' => $user));

    }


    public function editAction(Request $request,Article $article,$id)
    {
        $user = $this->getUser();
        if (!is_object($user) || !$user instanceof UserInterface) {
            throw new AccessDeniedException('This user does not have access to this section.');
        }

        $article->setUpdateddAt(new \DateTime('now'));
        $em = $this->getDoctrine()->getManager();
        $form = $this->createForm(new ArticleType(),$article);

        $form->handleRequest($request);
        $formView = $form->createView();

        if($form->isSubmitted() && $form->isValid()){

            $em->flush();



            return $this->redirect($this->generateUrl('contenu_list'));

        }

        return $this->render('MagBundle:Default:ArticleEdit.html.twig',array('form'=>$formView,'ids'=>$id, 'user' => $user));

    }


    public function deleteAction(Article $article){

        $em = $this->getDoctrine()->getManager();
        $em->remove($article);
        $em->flush();

        return $this->redirect($this->generateUrl('contenu_list'));

    }

      public function detailArticleAction(Request $request,$id){
      $em =$this->getDoctrine()->getManager();
      $article=$em->getRepository('MagBundle:Article')->find($id);
      
      if(!$article){
       throw $this->createNotFoundException('cette article n\'existe pas');

      }
      //pour inserer un commentaire
      $commentaire=new Commentaire();
      $form=$this->createForm(new CommentaireType(),$commentaire);
      $form->handleRequest($request);
      if($form->isSubmitted() && $form->isValid()){
        $commentaire->setArticle($article);
       $em->persist($commentaire);
       $em->flush();
       $request->getSession()->getFlashBag()->add('success','Votre Commentaire a été ajouté !');
       return $this->redirect($this->generateUrl('detail_article',array('id'=>$id)));
      }
      //professionnel
      $professionnel=$em->getRepository('MagBundle:Professionnel')
                        ->findProfess();
            
       //rubrique
       $rubrique=$em->getRepository('MagBundle:Article')->listeRubriques($id);

       $articles=$em->getRepository('MagBundle:Article')->listArticles();

       $next=$em->getRepository('MagBundle:Article')->nextArticle($id,$article->getCreatedAt());

       $prev=$em->getRepository('MagBundle:Article')->prevArticle($id,$article->getCreatedAt());
       $first=$em->getRepository('MagBundle:Article')->firstArticle();
       $last=$em->getRepository('MagBundle:Article')->lastArticle();
  

      return $this->render('MagBundle:Default:detailArticleFront.html.twig'
          ,array('article'=>$article,'form'=>$form->createView(),
                'professionnel'=>$professionnel,'rubrique'=>$rubrique,
                 'articles'=>$articles,'next'=>$next,'prev'=>$prev,'first'=>$first,'last'=>$last)
      );
    }

    public function pdfAction($id){

        $em = $this->getDoctrine()->getManager();

        $article=$this->getDoctrine()->getRepository('MagBundle:Article')->findOneBy(array('id'=>$id));

        $html = $this->container->get('templating')->render('MagBundle:Default:pdf.html.twig', array('article' => $article));

        $html2pdf = new \Html2Pdf_Html2Pdf('P','A4','fr');
        $html2pdf->pdf->SetAuthor('Edicom');
        $html2pdf->pdf->SetTitle('BusinessMag ');
        $html2pdf->pdf->SetSubject('Article BusinessMag');
        $html2pdf->pdf->SetKeywords('Article, BusinessMag');
        $html2pdf->pdf->SetDisplayMode('real');
        $html2pdf->writeHTML($html);
        $html2pdf->Output('Artice.pdf');

        $response=new Response();
        $response->headers->set('Content-type','application/pdf');

        return $response;
    }

    public function rechercheAction(){

        $form = $this->createForm(new RechercheType());
        return $this->render('MagBundle:Default:moduleUsed/recherche.html.twig',array(
                'form'=>$form->createView()
            )
        );
    }

    public function rechercheTraitementAction(){
        $em =$this->getDoctrine()->getManager();
        $articles=$em->getRepository('MagBundle:Article');

        //récupere les articles pour slider
        $slideArticles=$articles->slideArticles();
        //pour récupérer les 6 derniers articles
        $listArticles=$articles->listArticles();



        //afficher la liste des video
        $sql="SELECT * FROM video order by created_at desc limit 4";
        $conn = $this->getDoctrine()->getConnection('customer');

        $stmt = $conn->prepare($sql);
        $stmt->execute();
        $liste_video=$stmt->fetchAll();


        //recherche
        $form=$this->createForm(new RechercheType());
        if($this->get('request')->getMethod()=='POST'){
            $form->bind($this->get('request'));
            //echo $form['recherche']->getData();
            //die();
            $listArticles=$articles->recherche($form['recherche']->getData());
            //afficher la liste des video

            $sql="SELECT * FROM video where title like :title";


            $stmt = $conn->prepare($sql);
            $stmt->bindValue("title",'%'.$form['recherche']->getData().'%');
            $stmt->execute();
            $liste_video=$stmt->fetchAll();


        }

        return $this->render('MagBundle:Default:index.html.twig',
            array('articles'=>$listArticles,
                'slideArticles'=>$slideArticles,
                'liste_video'=>$liste_video
            )

        );
    }
  public function listeArticlesByThemeAction($theme){

       $em =$this->getDoctrine()->getManager();
       $articles=$em->getRepository('MagBundle:Article')->listesArticleByTheme($theme);

      // var_dump($articles);
       //die();
        return $this->render('MagBundle:Default:listeArticlesByTheme.html.twig',
               array('articles'=>$articles)
        
        );
    }


}

